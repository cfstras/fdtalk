Go (lang)
@flipdot ppn

Claus (cfstras)
c@cfs.im


* Warum eine neue Sprache?

* "Systems Programming"

Braucht / hat:

- UTF-8 by default
- Einfaches Multi-Threading
- Concurrency (Nebenlaeufigkeit)
- Speichersicherheit (--> kein C...)
- Langwierige Projekte

: threading: Also coder ist es nicht meine Aufgabe, zu entscheiden, wieviel threads ich brauche
: --> leichtgewichtige threads
: Concurrency ( != threding): man hat oft nebenlaeufige prozesse. Synchronisierung muss einfach sein.
: Speicher: man denke an das immerwaehrende Zugunglueck OpenSSL
: lang: code waechst. Es wird IMMER legacy geben.
: --> coding-style muss enforced werden.
: CONVENTIONS

* Threading
* Threading

- Viele viele threads

.play threading.go /threading_1 START OMIT/,/threading_1 END OMIT/

- sleep? Baeaeaeh!
- synchronisieren? wie?

* Threading: sync

.play sync.go /sync_1 START OMIT/,/sync_1 END OMIT/

* Threading: sync 2

.play sync2.go /sync_2 START OMIT/,/sync_2 END OMIT/

* Concurrency

* Channels: 1
.play concurrency.go /channels_1 START OMIT/,/channels_1 END OMIT/

* Channels: 2
.play concurrency.go /channels_2 START OMIT/,/channels_2 END OMIT/

* Channels
.play concurrency.go /channels_3 START OMIT/,/channels_3 END OMIT/

* Speicher

* Speicher
.play speicher.go /speicher_1 START OMIT/,/speicher_1 END OMIT/

* Conventions

* Conventions: Code
- gofmt
- goimports

: tabs, aegyptisch.

* Conventions: Pakete
- gopath
    src
    |-- github.com
        |-- cfstras
            |-- mein-projekt
        |-- somebody
            |-- foobar
--

test.go:

    import "github.com/cfstras/mein-projekt"
    import "github.com/somebody/foobar/subprojekt"
--

bash:

    $ go get go get github.com/cfstras/wiki-api
    $ go get github.com/cfstras/wiki-api .

* Conventions: Aber Aber
- was wenn ich ne bestimmte version will?
- was wenn der package-maintainer ploetzlich boese wird?
left-pad _hust_ _hust_

* Conventions: Aber Aber
vendoring!

- *Don't*depend*on*somebody*else's*infrastructure!*
- pypi
- rubygems
- npmjs

    $ govendor add +external
    $ git add vendor/
    $ git commit -m "added dependencies."

* Jetzt faellt mir nix mehr ein
